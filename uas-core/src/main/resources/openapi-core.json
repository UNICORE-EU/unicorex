{
	"openapi": "3.0.4",
	"info": {
		"title": "UNICORE/X Core services",
		"version": "10.2",
		"license": "BSD"
	},

	"servers": [
		{
			"url": "https://localhost:8080/VENUS/rest/core",
			"description": "Test server on localhost"
		}
	],

	"security": [
		{
			"username_password": [],
			"bearer_token": []
		}
	],

	"paths": {

		"/": {
			"get": {
				"description": "Get server's status and user's properties",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/fields" }
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/responses/server_status"
								}
							}
						}
					},
					"403": { "description": "Forbidden"	},
					"500": { "description": "Internal server error"	}
				}
			}
		},

		"/certificate": {
			"get": {
				"description": "Get server's certificate",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"text/plain": {
								"schema": { "type": "string"}
							}
						}
					},
					"500": { "description": "Internal server error" }
				},
				"security": []
			}
		},

		"/storages": {
			"get": {
				"description": "Get server's status and user's properties",
				"parameters": [
					{
						"$ref": "#/components/parameters/user_preferences"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"$ref": "#/components/responses/storages_list"
							}
						}
					},
					"403": { "description": "Forbidden" },
					"500": { "description": "Internal server error" }
				}
			}
		},

		"/storages/{id}": {
			"get": {
				"description": "Get storage properties",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/fields" },
					{ "$ref": "#/components/parameters/id" }
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"$ref": "#/components/responses/storage_properties"
							}
						}
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Resource not found" },
					"500": { "description": "Internal server error" }
				}
			}
		},

		"/storages/{id}/files/{path}": {
			"get": {
				"description": "Get properties of a file/directory on the storage",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/fields" },
					{ "$ref": "#/components/parameters/id" },
					{ "$ref": "#/components/parameters/file_path" }
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"$ref": "#/components/responses/files_properties"
							},
							"application/octet-stream":{
								"type": "string",
								"format": "binary"
							}
						}
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Resource not found" },
					"500": { "description": "Internal server error" }
				}
			},
			"put": {
				"description": "Modify file or its properties",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/id" },
					{ "$ref": "#/components/parameters/file_path" }
				],
				"requestBody":{
					"content": {
						"application/octet-stream":{
								"type": "string",
								"format": "binary"
						},
						"application/json":{
							"type": "object"
						}
					}
				}
			}
		},

		"/jobs": {
			"get": {
				"description": "Get job list",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/fields" }
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"$ref": "#/components/responses/jobs_list"
							}
						}
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"500": { "description": "Internal server error" }
				}
			},
			"post":{
				"description": "Submit a new job",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" }
				],
				"requestBody":{
					"required": "true",
					"content": {
						"application/json": {
							"schema": { "$ref": "#/components/schemas/job_description" }
						}
					}
				},
				"responses": {
					"201":{
						"description": "New job was created",
						"headers":{
							"Location": {
								"description": "URL of the newly created job"
							}
						}
					},
					"403": { "description": "Forbidden" },
					"500": { "description": "Internal server error" }
				}
			 }
		},
		"/jobs/{id}": {
			"get": {
				"description": "Get job properties",
				"parameters": [
					{ "$ref": "#/components/parameters/user_preferences" },
					{ "$ref": "#/components/parameters/fields" },
					{ "$ref": "#/components/parameters/id" }
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json": {
								"$ref": "#/components/responses/job_properties"
							}
						}
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Resource not found" },
					"500": { "description": "Internal server error" }
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"username_password": {
				"type": "http",
				"scheme": "basic"
			},
			"bearer_token": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT"
			},
			"none": {}
		},
		"parameters": {
			"user_preferences": {
				"name": "X-UNICORE-UserPreferences",
				"in": "header",
				"required": false,
				"description": "Allows to select the uid, gid or role from the ones that are available for the authenticated user."
			},
			"fields": {
				"name": "fields",
				"in": "query",
				"required": false,
				"description": "Comma-separated list of property fields to return."
			},
			"id": {
				"name": "id",
				"in": "path",
				"required": true,
				"description": "Resource identifier."
			},
			"file_path": {
				"name": "path",
				"in": "path",
				"required": true,
				"description": "File path relative to storage root."
			}
		},
		"responses": {
			"server_status": {
				"type": "object",
				"properties": {
					"client": {
						"type": "object",
						"description": "Information about the authenticated client",
						"properties": {
							"dn": {
								"type": "string",
								"description": "ID of the authenticated user"
							},
							"role": {
								"type": "object",
								"description": "Role after authentication"
							},
							"xlogin": {
								"type": "object",
								"description": "Userid, groups after authentication"
							},
							"authenticationMethod": {
								"type": "string",
								"description": "which authentication method was used"
							}
						}
					},
					"server": {
						"type": "object",
						"description": "Information about the server and its status"
					},
					"_links": {
						"type": "object",
						"properties": {
							"storages": { "$ref": "#/components/schemas/link" },
							"storagefactories": { "$ref": "#/components/schemas/link" },
							"client-server-transfers": { "$ref": "#/components/schemas/link" },
							"transfers": { "$ref": "#/components/schemas/link" },
							"factories": { "$ref": "#/components/schemas/link" },
							"sites": { "$ref": "#/components/schemas/link" },
							"jobs": { "$ref": "#/components/schemas/link" },
							"reservations": { "$ref": "#/components/schemas/link" },
							"tasks": { "$ref": "#/components/schemas/link" }
						}
					}
				}
			},
			"storages_list": {
				"description": "List of storages",
				"content": {
					"application/json": {
						"type": "object",
						"properties": {
							"storages": {
								"type": "array",
								"description": "URLs of storages"
							},
							"_links": {
								"self": { "$ref": "#/components/schemas/link" }
							}
						}
					}
				}
			},
			"storage_properties": {
				"description": "Properties of a storage",
				"content": {
					"application/json": {
						"type": "object",
						"properties": {
							"mountPoint": { "type": "string"},
							"umask": { "type": "string"},
							"freeSpace": { "type": "integer"},
							"usableSpace": { "type": "integer"},
							"filesystemDescription": { "type": "integer"},
							"owner": {"type": "string"},
							"tags": { "$ref": "#/components/schemas/tags"},
							"acl": { "$ref": "#/components/schemas/acl"},
							"terminationTime": { "type": "string"},
							"resourceStatus": { "type": "string"},
							"resourceStatusMessage": { "type": "string"},
							"_links": {
								"self": { "$ref": "#/components/schemas/link" },
								"files": { "$ref": "#/components/schemas/link" },
								"action:copy": { "$ref": "#/components/schemas/link" },
								"action:rename": { "$ref": "#/components/schemas/link" },
								"action:extract": { "$ref": "#/components/schemas/link" },
								"metadata-search": { "$ref": "#/components/schemas/link" }
							}
						}
					}
				}
			},
			"files_properties": {
				"description": "Properties of a file/directory",
				"content": {
					"application/json": {
						"type": "object",
						"properties": {
							"size": { "type": "integer"},
							"isDirectory": {"type": "boolean"},
							"owner": {"type": "string"},
							"group": {"type": "string"},
							"lastAccessed": { "type": "string"},
							"permissions": { "type": "string"},
							"metadata": {"type": "object"},
							"content": {
								"type": "object",
								"patternProperties": {
								 	"^(/[^/]+)+$": "#/components/schemas/stat_entry"
								}
							},
							"_links": {
								"self": { "$ref": "#/components/schemas/link" },
								"action:extract": { "$ref": "#/components/schemas/link" },
								"parentStorage": { "$ref": "#/components/schemas/link" }
							}
						}
					}
				}
			},
			"jobs_list": {
				"description": "List of jobs",
				"content": {
					"application/json": {
						"type": "object",
						"properties": {
							"jobs": {
								"type": "array",
								"description": "URLs of jobs"
							},
							"_links": {
				
							}
						}
					}
				}
			},
			"job_properties": {
				"description": "Properties of a job",
				"content": {
					"application/json": {
						"type": "object",
						"properties": {
							"status": { "$ref": "#/components/schemas/job_status" },
							"statusMessage": { "type": "string" },
							"submissionTime": {	"type": "string" },
							"jobType": { "$ref": "#/components/schemas/job_type" },
							"name": { "type": "string" },
							"batchSystemID": { "type": "string" },
							"exitCode": { "type": "string" },
							"queue": { "type": "string" },
							"consumedTime": {
								"type": "object",
								"properties": {
									"stage-in": { "type": "string" },
									"preCommand": { "type": "string" },
									"queued": { "type": "string" },
									"main": { "type": "string" },
									"postCommand": { "type": "string" },
									"stage-out": { "type": "string" },
									"total": { "type": "string"	}
								},
								"required": ["total"]
							},
							"log": {
								"type": "array",
								"items": {
									"type": "string"
								}
							},
							"submissionPreferences": { "type": "object" },
							"owner": {"type": "string"},
							"tags": { "$ref": "#/components/schemas/tags"},
							"acl": { "$ref": "#/components/schemas/acl"},
							"terminationTime": { "type": "string"},
							"resourceStatus": { "type": "string"},
							"resourceStatusMessage": { "type": "string"},
							"_links": {
								"self": { "$ref": "#/components/schemas/link" },
								"action:abort": { "$ref": "#/components/schemas/link" },
								"action:start": { "$ref": "#/components/schemas/link" },
								"action:restart": { "$ref": "#/components/schemas/link" },
								"forwarding": { "$ref": "#/components/schemas/link" },
								"submitted": { "$ref": "#/components/schemas/link" },
								"parentTSS": { "$ref": "#/components/schemas/link" },
								"workingDirectory": { "$ref": "#/components/schemas/link" }
							}
						}
					}
				}
			}
		},
		"schemas": {
			"link": {
				"type": "object",
				"description": "A link to another part of the API",
				"properties": {
					"description": {
						"type": "string"
					},
					"href": {
						"type": "string",
						"description": "Endpoint URL"
					}
				},
				"required": ["href"]
			},
			"acl": {
				"type": "array",
				"description": "A list of ACL entries of the form '[read|modify]:[DN|GROUP|UID|ROLE]:[value]'",
				"items": { "type": "string" }
			},
			"tags": {
				"type": "array",
				"description": "A list of tags",
				"items": { "type": "string" }
			},
			"job_type": {
				"description": "Job type, defaults to BATCH",
				"enum": ["BATCH", "ON_LOGIN_NODE", "RAW", "ALLOCATE_ONLY" ]
			},
			"job_status": {
				"description": "Job status",
				"enum": ["UNDEFINED", "CREATED", "STAGINGIN", "READY", "QUEUED", "RUNNING", "STAGINGOUT", "SUCCESSFUL", "FAILED"]
			},
			"stat_entry": {
				"description": "File properties",
				"type": "object",
				"properties": {
					"size": { "type": "integer"},
					"isDirectory": {"type": "boolean"},
					"owner": {"type": "string"},
					"group": {"type": "string"},
					"lastAccessed": { "type": "string"},
					"permissions": { "type": "string"}
				}
			},
			"job_description": {
				"description": "Job description including staging, pre- and postprocessing, main executable",
				"type": "object",
				"properties": {
				 	"Job type": { "$ref": "#/components/schemas/job_type"},
				 	"Login node": { "type": "string",
				 		"description": "if the Job type is ON_LOGIN_NODE, this element can be used to further specify which login node to use"
				 	},
				 	"BSS file": { "type": "string",
				 		"description": "if the Job type is RAW, this element contains the name of the file containing BSS specifications"
				 	},
				 	"Name": { "type": "string", "description": "Job name"},
				 	"Executable": {
				 		"type": "string",
				 		"description": "The executable to run (arguments should be given via the Arguments element)"
				 	},
				 	"Arguments": { "type": "array", "items": { "type": "string" },
				 		"description": "Arguments for the executable"
				 	},
				 	"Parameters": { "type": "object",
				 		"description": "Key-value pairs which will be added to the job's enviroment variables"
				 	},
				 	"IgnoreNonZeroExitCode": { "type": "boolean",
				 		"description": "Do not fail the job of user script exits with non-zero exit code"
				 	},
				 	"Imports": { "$ref": "#/components/schemas/imports_specification" },
				 	"Exports": { "$ref": "#/components/schemas/exports_specification" },
				 	"User precommand": { "type": "string",
				 		"description": "Command to run before the main executable, after staging-in"
				 	},
				 	"RunUserPrecommandOnLoginNode": { "type": "boolean" },
				 	"UserPrecommandIgnoreNonZeroExitCode": { "type": "boolean",
				 		"description": "Do not fail the job of pre-command exits with non-zero exit code"
				 	},
				 	"User postcommand": { "type":"string",
				 		"description": "Command to run after the main executable, before staging-out"
				 	},
				 	"RunUserPostcommandOnLoginNode": { "type": "boolean" },
				 	"Resources": { "$ref": "#/components/schemas/resource_specification" },
				 	"Notification": { "type": "string",
				 		"description": "URL to send job status notifications to"
				 	},
				 	"Tags": {"type": "array", "items": { "type": "string" },
				 		"description": "Job tags"
				 	}
				 }
			},
			"imports_specification": { "type": "array", "description": "File(s) to stage-in",
				"items": {
					"type": "object",
					"properties": {
						"To": { "description": "Local file name" },
						"From": { "type":"string", "format": "uri",
							"description": "Remote location (URL)"
						},
						"data": {
							"type": "array", "items": { "type": "string" },
							"description": "data for inline:// stage-in"
						}
					}
				}
			},
			"exports_specification": { "type": "array", "description": "File(s) to stage-out",
				"items": {
					"type": "object",
					"properties": {
						"To": { "type":"string", "format": "uri",
							"description": "Remote location (URL)"
						},
						"From": { "type": "string", "description": "Local file name"}
					}
				}
			},
			"resource_specification": {
				"type": "object",
				"description": "Describes requested resources for jobs of type BATCH or ALLOCATE_ONLY",
				"properties":{
				 	"Project": { "type": "string",
				 		"description": "Accounting project"
				 	},
				 	"Queue": { "type": "string",
				 		"description": "Batch system queue"
				 	},
				 	"Runtime": { "type": "string",
				 		"description": "Job runtime (wall time), in seconds, use 'min', 'h', 'd' for other units."
				 	},
				 	"Nodes": { "type": "integer",
				 		"description": "Number of nodes"
				 	},
				 	"CPUsPerNode": { "type": "integer",
				 		"description": "Number of CPUs per node"
				 	},
				 	"TotalCPUs": { "type": "integer",
				 		"description": "Total number of CPUs for the job"
				 	},
				 	"GPUsPerNode": { "type": "integer",
				 		"description": "Number of GPUs per node"
				 	},
				 	"Reservation": { "type": "string",
				 		"description": "Reservation ID"
				 	},
				 	"Memory": { "type": "string",
				 		"description": "Memory per node"
				 	},
				 	"NodeConstraints": { "type": "string",
				 		"description": "Constraints on the type of allocated nodes"
				 	},
				 	"QoS": { "type": "string",
				 		"description": "Batch system QoS settings"
				 	},
				 	"Exclusive": { "type": "boolean",
				 		"description": "Request exclusive use of the allocated node(s)"
				 	}
				 }
			}
		}
	}
}